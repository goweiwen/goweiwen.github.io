---
title: "Week 2 Of CS3216"
date: 2017-08-24T23:02:11+08:00
tags:
- CS3216
- NUS
---

Week 2 ends with two deliverables due on the midnight of Friday.

My team's Orbital presentation happened earlier this week. One of the advisors for the Orbital project took CS3216 during his second year. He mentioned that in retrospect, taking it in year three, after CS3217, would be a better choice. That scared me, but I'm confident I'll be able to overcome any obstacles CS3216 throws.

At the Orbital presentation, I bumped into another pair from this year's intake, who told me that they had dropped this module. One of them made an impression on me during the first lecture because he came from an Engineering background. He had signed up together with a friend from Computing.

I really enjoyed this week's lecture, which taught us important software engineering principles, such as testing and code style. These principles are analogous to keeping your workspace tidy, which allows you to jump right into code that you haven't touched for a while and quickly familiarise yourself with it.

Enforcing a strict set of rules is helpful in maintaining a consistent code base, which is something I had not needed in solo projects. I have not done testing in any of my projects, but I hope to do so soon.

For assignment 1, our team uses JavaScript for both the front end and back end. We use [[https://eslint.org/][ESLint]] with the [[https://standardjs.com/][JavaScript Standard Style]], along with the [[https://github.com/prettier/prettier-eslint][Prettier]] plugin, which allows us to run =eslint --fix= to automatically format our code according a specified set of rules. With proper tooling, this can be performed on file save, which alleviates the tedium of monitoring inconsequential details such as indentation style and semicolons to fit our code style.